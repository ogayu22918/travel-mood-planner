version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg15
    container_name: travel_mood_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-travel_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-travel_pass}
      POSTGRES_DB: ${POSTGRES_DB:-travel_mood}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U travel_user"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - travel_mood_network

  redis:
    image: redis:7-alpine
    container_name: travel_mood_redis
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - travel_mood_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: travel_mood_backend
    environment:
      DATABASE_URL: postgresql://travel_user:travel_pass@postgres:5432/travel_mood
      REDIS_URL: redis://redis:6379
      AZURE_OPENAI_ENDPOINT: ${AZURE_OPENAI_ENDPOINT}
      AZURE_OPENAI_API_KEY: ${AZURE_OPENAI_API_KEY}
      AZURE_OPENAI_EMBEDDING_ENDPOINT: ${AZURE_OPENAI_EMBEDDING_ENDPOINT}
      AZURE_OPENAI_EMBEDDING_API_KEY: ${AZURE_OPENAI_EMBEDDING_API_KEY}
      PYTHONPATH: /app
    volumes:
      - ./backend:/app
      - backend_cache:/root/.cache
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - travel_mood_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: travel_mood_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: npm run dev
    networks:
      - travel_mood_network

volumes:
  postgres_data:
  redis_data:
  backend_cache:

networks:
  travel_mood_network:
    driver: bridge
